version: "3.9"

networks:
  network:
    ipam:
      driver: default
      config:
        - subnet: "10.1.0.100/24"

services:
  redis:
    networks:
      network:
        ipv4_address: 10.1.0.102
    image: redis/redis-stack
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  bot:
    networks:
      network:
        ipv4_address: 10.1.0.11
    build: .
    env_file:
      - .env
    container_name: bot
    depends_on:
      - postgres

  celery_beat:
    networks:
      network:
        ipv4_address: 10.1.0.12
    image: medicine_notification_bot-bot
    env_file:
      - .env
    container_name: celery_beat
    depends_on:
      - bot
    entrypoint: [ "celery", "-A", "async_tasks.celery_init", "beat", "--loglevel=INFO" ]


  celery_worker:
    networks:
      network:
        ipv4_address: 10.1.0.13
    image: medicine_notification_bot-bot
    env_file:
      - .env
    container_name: celery_worker
    depends_on:
      - bot
    entrypoint: [ "celery", "-A", "async_tasks.celery_init", "worker", "--loglevel=INFO" ]


  postgres:
    networks:
      network:
        ipv4_address: 10.1.0.100
    image: postgres:13.3
    container_name: postgres
    env_file:
      - .env
    volumes:
      - /data/postgresql/bot:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U bot -d bot_db" ]
      interval: 10s
      timeout: 5s
      retries: 5


  pgadmin:
    container_name: pgadmin
    networks:
      network:
        ipv4_address: 10.1.0.9
    image: dpage/pgadmin4
    env_file:
      - .env
    ports:
      - '3232:80'
    depends_on:
      - postgres
